---
# Go-Ethereum
geth_service_name: 'geth-sepolia-{{ "%02d"|format(idx|int+1) }}'
geth_network_name: 'sepolia'
geth_sync_mode: 'full'
geth_log_level_name: info
# Geth auth
geth_account_pass: '{{lookup("bitwarden", "nimbus/geth", field="password")}}'
# Memory settings
geth_cont_mem_ratio: 0.3
# Genesis
geth_init_enabled: false
# Ports
geth_port: '{{ 30303 + idx|int + 11 }}'
geth_metrics_port: '{{ 6060 + idx|int + 11 }}'
geth_rpc_enabled: true
geth_rpc_addr: '0.0.0.0'
geth_rpc_port: '{{ 8545 + idx|int + 11 }}'
geth_websocket_enabled: true
geth_websocket_addr: '0.0.0.0'
geth_websocket_port: '{{ 9546 + idx|int + 11 }}'

# Beacon Nodes
beacon_node_service_name: 'beacon-node-{{ beacon_node_network }}-{{ beacon_node_repo_branch }}-{{ "%02d"|format(idx|int+1) }}'
beacon_node_network: 'sepolia'
beacon_node_repo_branch: 'unstable'
beacon_node_nim_commit: '{{ node.get("nim_commit", "") }}'
beacon_node_build_nim_flags: '-d:noSignalHandler {{ node.get("nim_flags", "") }}'

#Builds
beacon_node_build_frequency: 'daily'
# Monitoring
beacon_node_validator_monitor_auto: true
beacon_node_validator_monitor_totals: true
#Eth1 Sync
beacon_node_web3_urls: ['ws://localhost:{{ geth_websocket_port }}']
# Validators from nimbus-private repoÂ¬
beacon_node_dist_validators_enabled: '{{ node.start is defined and node.end is defined }}'
beacon_node_dist_validators_start: '{{ node.start | mandatory }}'
beacon_node_dist_validators_end: '{{ node.end | mandatory }}'
# Ports
beacon_node_discovery_port: '{{ 9000 + idx|int + 11 }}'
beacon_node_listening_port: '{{ 9000 + idx|int + 11 }}'
beacon_node_metrics_port:   '{{ 9200 + idx|int + 11 }}'
beacon_node_rest_port:      '{{ 9300 + idx|int + 11 }}'
beacon_node_rest_address:   '0.0.0.0'

nodes_layout:
  'metal-01.he-eu-hel1.nimbus.kiln':
    - {  branch: 'stable',   start:  0, end:  25 }
    - {  branch: 'testing',  start: 25, end:  50 }
    - {  branch: 'unstable', start: 50, end:  75, nim_commit: 'version-1-6' }
    - {  branch: 'libp2p',   start: 75, end: 100, nim_flags: '-d:json_rpc_websocket_package=websock' }
