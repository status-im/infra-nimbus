---
- name: Verify Ansible versions
  hosts: all
  tags: always
  become: false
  run_once: true
  gather_facts: false
  tasks:
    - local_action: command ./versioncheck.py
      changed_when: false

- name: Deploy pyrmont Metal beacon nodes
  become: true
  serial: '{{ serial|default(4) }}'
  hosts:
    - nimbus-pyrmont-metal
  roles:
    - role: get-geth-web3-urls
      tags: get-geth-web3-urls
  tasks:
    - include_role: name=infra-role-beacon-node-linux
      tags: beacon-node
      vars:
        # Using whole libp2p branch name would be far too long.
        beacon_node_service_name: 'beacon-node-{{ beacon_node_network }}-{{ node.name }}'
        beacon_node_build_frequency: '{{ node.build_frequency }}'
        # TEMPORARY switch for Prater Altair transition
        beacon_node_repo_branch:  |-
          {{ (node.branch == 'stable') | ternary("unstable-revert-taskpool", "unstable") }}
        beacon_node_threads:  |-
          {{ (node.branch == 'testing') | ternary(4, 1) }}
        beacon_node_discovery_port: '{{ 9000 + port_offset }}'
        beacon_node_listening_port: '{{ 9000 + port_offset }}'
        beacon_node_metrics_port:   '{{ 9200 + port_offset }}'
        beacon_node_rest_port:      '{{ 9300 + port_offset }}'
        beacon_node_rpc_enabled:    true
        beacon_node_rpc_port:       '{{ 9900 + port_offset }}'
        beacon_node_dist_validators_start: '{{ validators_layout[hostname][node.name]["start"] | mandatory }}'
        beacon_node_dist_validators_end: '{{ validators_layout[hostname][node.name]["end"] | mandatory }}'
      with_items:
        - { name: 'stable',   branch: 'stable',                        build_frequency: '*-*-* 11:00:00' }
        - { name: 'unstable', branch: 'unstable',                      build_frequency: '*-*-* 13:00:00' }
        - { name: 'testing',  branch: 'testing',                       build_frequency: '*-*-* 15:00:00' }
        - { name: 'libp2p',   branch: 'nim-libp2p-auto-bump-unstable', build_frequency: '*-*-* 17:00:00' }
      loop_control:
        loop_var: node
        index_var: port_offset
