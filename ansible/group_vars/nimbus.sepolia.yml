---
# Go-Ethereum
geth_service_name: 'geth-sepolia-{{ node.branch }}'
geth_network_name: 'sepolia'
geth_service_path: '/docker/{{ geth_service_name }}'
geth_cont_name: '{{ geth_service_name }}-node'
geth_cont_vol: '{{ geth_service_path }}/node'
geth_sync_mode: 'full'
geth_log_level_name: info
# Geth auth & JWT token
geth_account_pass: '{{lookup("bitwarden", "nimbus/geth", field="password")}}'
geth_authrpc_jwtsecret: '{{lookup("bitwarden", "nimbus/jwt-token")}}'
# Memory settings
geth_cont_mem_ratio: 0.3
# Genesis
geth_init_enabled: false
# Ports
geth_rpc_enabled: true
geth_rpc_addr: '0.0.0.0'
geth_authrpc_addr: '0.0.0.0'
geth_websocket_enabled: true
geth_websocket_addr: '0.0.0.0'
geth_port:           '{{ 30303 + idx|int + 11 }}'
geth_metrics_port:   '{{ 6060  + idx|int + 11 }}'
geth_rpc_port:       '{{ 8545  + idx|int + 11 }}'
geth_authrpc_port:   '{{ 8551  + idx|int + 11 }}'
geth_websocket_port: '{{ 9546  + idx|int + 11 }}'
# Parameter for waku RLN keystore generation
geth_extra_flags: '{{ ["--rpc.allow-unprotected-txs"] if idx == 0 }}'

# We map short names to branches to avoid too long service names.
node_name_to_branch_map:
  libp2p: 'nim-libp2p-auto-bump-unstable'

# Beacon Nodes
beacon_node_service_name: 'beacon-node-{{ beacon_node_network }}-{{ node.branch }}'
beacon_node_network: 'sepolia'
beacon_node_era_dir_path: '{{ nimbus_era_files_timer_path }}'
beacon_node_repo_branch: '{{ node_name_to_branch_map.get(node.branch, node.branch) }}'
beacon_node_xtra_flags: '{{ node.extra_flags if node.extra_flags is defined else {} }}'
beacon_node_payload_builder_enabled: '{{ node.get("payload_builder", false) }}'
beacon_node_payload_builder_url: 'https://boost-relay-sepolia.flashbots.net/ '
# Updates
beacon_node_update_frequency: '*-*-* {{ "%02d" | format(idx * 2) }}:00:00'
beacon_node_update_build_nim_flags: '-d:noSignalHandler {{ node.get("nim_flags", "") }}'
beacon_node_update_build_targets: ['nimbus_beacon_node', 'ncli_db']
# Monitoring
beacon_node_validator_monitor_auto: true
beacon_node_validator_monitor_details: true
# Execution layer Enginer API
beacon_node_exec_layer_urls: ['http://localhost:{{ geth_authrpc_port }}']
beacon_node_exec_layer_jwt_secret: '{{ geth_authrpc_jwtsecret | mandatory }}'
# Suggests it to the Execution Layer client.
beacon_node_suggested_fee_recipient: '{{lookup("bitwarden", "nimbus/wallet/testnets", field="address")}}'
# Validators from nimbus-private repo¬
beacon_node_dist_validators_enabled: '{{ node.start is defined and node.end is defined }}'
beacon_node_dist_validators_start: '{{ node.vc | ternary(0, node.start) | mandatory }}'
beacon_node_dist_validators_end:   '{{ node.vc | ternary(0, node.end)   | mandatory }}'
# Ports
beacon_node_rest_port_base: 9300
beacon_node_discovery_port: '{{ 9000 + idx|int + 11 }}'
beacon_node_listening_port: '{{ 9000 + idx|int + 11 }}'
beacon_node_metrics_port:   '{{ 9200 + idx|int + 11 }}'
beacon_node_rest_port:      '{{ beacon_node_rest_port_base + idx|int + 11 }}'
beacon_node_rest_address:   '0.0.0.0'
# Reduce Consul alerts sensitivity
beacon_node_consul_check_disabled: '{{ node.get("public_api", false) }}'
beacon_node_consul_check_interval: '60s'
beacon_node_consul_check_timeout: '10s'
beacon_node_consul_success_before_passing:    60 # 1h
beacon_node_consul_failures_before_warning:  360 # 6h
beacon_node_consul_failures_before_critical: 720 # 12h

# Validator Client
validator_client_service_name: 'validator-client-{{ validator_client_network }}-{{ node.branch }}'
validator_client_service_enabled: '{{ node.vc }}'
validator_client_network: '{{ beacon_node_network }}'
validator_client_log_level: 'INFO'
validator_client_beacon_node_url: 'http://127.0.0.1:{{ beacon_node_rest_port }}'
# Builds
validator_client_build_repo_branch: '{{ beacon_node_repo_branch }}'
validator_client_build_frequency: 'daily'
# Ports
validator_client_metrics_port:    '{{ 8108 + idx|int + 1 }}'
validator_client_keymanager_port: '{{ 5052 + idx|int + 1 }}'

# Geth metrics¬
geth_expo_service_name: '{{ geth_service_name }}'
geth_expo_source_cont_name: '{{ geth_cont_name }}'
geth_expo_source_data_path: '{{ geth_cont_vol }}/data'
geth_expo_cont_port:  '{{ 9400 + (idx|int) + 1 }}'

# Suggests it to the Execution Layer client and the builder network.
validator_client_suggested_fee_recipient: '{{lookup("bitwarden", "nimbus/wallet/testnets", field="address")}}'
# MEV Payload Builder
validator_client_payload_builder_enabled: '{{ node.get("payload_builder", false) }}'
# Keymanager
validator_client_keymanager_enabled: true
validator_client_keymanager_token: '{{lookup("bitwarden", "nimbus/keymanager", field="token")}}'
# Validators Distribution
validator_client_dist_validators_enabled: '{{ node.start is defined and node.end is defined }}'
validator_client_dist_validators_start: '{{ (not node.vc) | ternary(0, node.start) | mandatory }}'
validator_client_dist_validators_end:   '{{ (not node.vc) | ternary(0, node.end)   | mandatory }}'

# ERA files geneartion.
nimbus_era_files_timer_enabled: '{{ (nodes_layout[inventory_hostname]|length) > 1 }}'
nimbus_era_files_timer_path: '/data/era'
nimbus_era_files_network: '{{ beacon_node_network }}'
nimbus_era_files_db_path: '/data/beacon-node-{{ beacon_node_network }}-unstable/data/db'
nimbus_era_files_nclidb_path: '/data/beacon-node-{{ beacon_node_network }}-unstable/repo/build/ncli_db'

# Migrated to NFTables from IPTables.
# https://github.com/status-im/infra-misc/issues/301
bootstrap__firewall_nftables: true

# Open Ports
open_ports_list:
    nginx:
      - { port: 443,           comment: 'Nginx' }
    smart-metrics:
      - { port: '{{ smart_metrics_listen_port }}', comment: 'SMART Metrics', ipset: 'metrics.hq',    iifname: 'wg0' }
    geth-node:
      - { port: '30314-30317', comment: 'Go-Ethereum libp2p',    protocol: 'tcp'                                    }
      - { port: '30314-30317', comment: 'Go-Ethereum discovery', protocol: 'udp'                                    }
      - { port: '9400-9404',   comment: 'Geth Exporter',         ipset: 'metrics.hq',                iifname: 'wg0' }
    beacon-node:
      - { port: '9011-9014',   comment: 'Beacon Node libp2p',    protocol: 'tcp'                                    }
      - { port: '9011-9014',   comment: 'Beacon Node discovery', protocol: 'udp'                                    }
      - { port: '9211-9214',   comment: 'Beacon Node Metrics',   ipset: 'metrics.hq',                iifname: 'wg0' }
      - { port: '9311-9314',   comment: 'Beacon Node REST API',  ipset: '{{ env }}.{{ stage }}',     iifname: 'wg0' }
    validator-client:
      - { port: '5053-5057',   comment: 'Validator Client REST API', ipset: '{{ env }}.{{ stage }}', iifname: 'wg0' }
      - { port: '8109-8113',   comment: 'Validator Client Metrics',  ipset: 'metrics.hq',            iifname: 'wg0' }
    waku-fleets: # https://github.com/status-im/infra-nim-waku/issues/59
      - { port: '8556-8559',   comment: 'RCP for WakuMonitor',   ipset: 'waku-nmon.misc',            iifname: 'wg0' }
      - { port: '8556-8559',   comment: 'RCP for waku.test',     ipset: 'waku.test',                 iifname: 'wg0' }
      - { port: '8556-8559',   comment: 'RCP for waku.sandbox',  ipset: 'waku.sandbox',              iifname: 'wg0' }
      - { port: '9557-9560',   comment: 'Websocket for Waku',    ipset: 'waku.test',                 iifname: 'wg0' }
      - { port: '9557-9560',   comment: 'Websocket for Waku',    ipset: 'waku.sandbox',              iifname: 'wg0' }
