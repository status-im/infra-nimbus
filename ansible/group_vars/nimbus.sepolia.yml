---
# Go-Ethereum
geth_service_name: 'geth-sepolia-{{ "%02d"|format(idx|int+1) }}'
geth_network_name: 'sepolia'
geth_sync_mode: 'full'
geth_log_level_name: info
# Geth auth & JWT token
geth_account_pass: '{{lookup("bitwarden", "nimbus/geth", field="password")}}'
geth_authrpc_jwtsecret: '{{lookup("bitwarden", "nimbus/jwt-token")}}'
# Memory settings
geth_cont_mem_ratio: 0.3
# Genesis
geth_init_enabled: false
# Ports
geth_port: '{{ 30303 + idx|int + 11 }}'
geth_metrics_port: '{{ 6060 + idx|int + 11 }}'
geth_rpc_enabled: true
geth_rpc_addr: '0.0.0.0'
geth_rpc_port: '{{ 8545 + idx|int + 11 }}'
geth_authrpc_addr: '0.0.0.0'
geth_authrpc_port: '{{ 8551 + idx|int + 11 }}'
geth_websocket_enabled: true
geth_websocket_addr: '0.0.0.0'
geth_websocket_port: '{{ 9546 + idx|int + 11 }}'

# Beacon Nodes
beacon_node_service_name: 'beacon-node-{{ beacon_node_network }}-{{ beacon_node_repo_branch }}-{{ "%02d"|format(idx|int+1) }}'
beacon_node_network: 'sepolia'
beacon_node_repo_branch: '{{ node.get("branch", "unstable") }}'
beacon_node_nim_commit: '{{ node.get("nim_commit", "") }}'
beacon_node_build_nim_flags: '-d:noSignalHandler {{ node.get("nim_flags", "") }}'
beacon_node_payload_builder_enabled: '{{ node.get("payload_builder", false) }}'
beacon_node_payload_builder_url: 'https://builder-relay-sepolia.flashbots.net/'
# Builds
beacon_node_build_frequency: 'daily'
# Monitoring
beacon_node_validator_monitor_auto: true
beacon_node_validator_monitor_totals: true
# Execution layer Enginer API
beacon_node_exec_layer_urls: ['http://localhost:{{ geth_authrpc_port }}']
beacon_node_exec_layer_jwt_secret: '{{ geth_authrpc_jwtsecret | mandatory }}'
# Suggests it to the Execution Layer client.
beacon_node_suggested_fee_recipient: '{{lookup("bitwarden", "nimbus/wallet/testnets", field="address")}}'
# Validators from nimbus-private repoÂ¬
beacon_node_dist_validators_enabled: '{{ node.start is defined and node.end is defined }}'
beacon_node_dist_validators_start: '{{ node.validator_client | ternary(0, node.start) | mandatory }}'
beacon_node_dist_validators_end:   '{{ node.validator_client | ternary(0, node.end)   | mandatory }}'
# Ports
beacon_node_discovery_port: '{{ 9000 + idx|int + 11 }}'
beacon_node_listening_port: '{{ 9000 + idx|int + 11 }}'
beacon_node_metrics_port:   '{{ 9200 + idx|int + 11 }}'
beacon_node_rest_port:      '{{ 9300 + idx|int + 11 }}'
beacon_node_rest_address:   '0.0.0.0'

# Validator Client
validator_client_service_name: 'validator-client-{{ validator_client_network }}-{{ validator_client_build_repo_branch }}-{{ "%02d"|format(idx|int+1) }}'
validator_client_service_enabled: '{{ node.validator_client }}'
validator_client_network: '{{ beacon_node_network }}'
validator_client_log_level: 'INFO'
validator_client_beacon_node_url: 'http://127.0.0.1:{{ beacon_node_rest_port }}'
# Builds
validator_client_build_repo_branch: '{{ beacon_node_repo_branch }}'
validator_client_build_frequency: 'daily'
# Ports
validator_client_metrics_port:    '{{ 8108 + idx|int + 1 }}'
validator_client_keymanager_port: '{{ 5052 + idx|int + 1 }}'
# Suggests it to the Execution Layer client and the builder network.
validator_client_suggested_fee_recipient: '{{lookup("bitwarden", "nimbus/wallet/testnets", field="address")}}'
# MEV Payload Builder
validator_client_payload_builder_enabled: '{{ node.get("payload_builder", false) }}'
# Keymanager
validator_client_keymanager_enabled: true
validator_client_keymanager_token: '{{lookup("bitwarden", "nimbus/keymanager", field="token")}}'
# Validators Distribution
validator_client_dist_validators_enabled: '{{ node.start is defined and node.end is defined }}'
validator_client_dist_validators_start: '{{ (not node.validator_client) | ternary(0, node.start) | mandatory }}'
validator_client_dist_validators_end:   '{{ (not node.validator_client) | ternary(0, node.end)   | mandatory }}'

nodes_layout:
  'linux-01.he-eu-hel1.nimbus.sepolia':
    - { start:  0, end:  25, validator_client: true }
    - { start: 25, end:  50, validator_client: false, nim_commit: 'version-1-6', payload_builder: true  }
    - { start: 50, end:  75, validator_client: false, nim_commit: 'version-1-6' }
    - { start: 75, end: 100, validator_client: false, nim_flags: '-d:json_rpc_websocket_package=websock' }
